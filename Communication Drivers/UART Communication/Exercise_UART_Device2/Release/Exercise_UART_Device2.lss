
Exercise_UART_Device2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000156  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 68 00 	call	0xd0	; 0xd0 <main>
  64:	0c 94 a9 00 	jmp	0x152	; 0x152 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <UART_Init>:
  6c:	9b 01       	movw	r18, r22
  6e:	ac 01       	movw	r20, r24
  70:	88 e1       	ldi	r24, 0x18	; 24
  72:	8a b9       	out	0x0a, r24	; 10
  74:	86 e8       	ldi	r24, 0x86	; 134
  76:	80 bd       	out	0x20, r24	; 32
  78:	84 e0       	ldi	r24, 0x04	; 4
  7a:	22 0f       	add	r18, r18
  7c:	33 1f       	adc	r19, r19
  7e:	44 1f       	adc	r20, r20
  80:	55 1f       	adc	r21, r21
  82:	8a 95       	dec	r24
  84:	d1 f7       	brne	.-12     	; 0x7a <UART_Init+0xe>
  86:	60 e0       	ldi	r22, 0x00	; 0
  88:	72 e1       	ldi	r23, 0x12	; 18
  8a:	8a e7       	ldi	r24, 0x7A	; 122
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	0e 94 87 00 	call	0x10e	; 0x10e <__udivmodsi4>
  92:	21 50       	subi	r18, 0x01	; 1
  94:	29 b9       	out	0x09, r18	; 9
  96:	08 95       	ret

00000098 <UART_Send_Byte>:
  98:	8c b9       	out	0x0c, r24	; 12
  9a:	5e 9b       	sbis	0x0b, 6	; 11
  9c:	fe cf       	rjmp	.-4      	; 0x9a <UART_Send_Byte+0x2>
  9e:	5e 9a       	sbi	0x0b, 6	; 11
  a0:	08 95       	ret

000000a2 <UART_Send_String>:
  a2:	fc 01       	movw	r30, r24
  a4:	05 c0       	rjmp	.+10     	; 0xb0 <UART_Send_String+0xe>
  a6:	8c b9       	out	0x0c, r24	; 12
  a8:	5e 9b       	sbis	0x0b, 6	; 11
  aa:	fe cf       	rjmp	.-4      	; 0xa8 <UART_Send_String+0x6>
  ac:	5e 9a       	sbi	0x0b, 6	; 11
  ae:	31 96       	adiw	r30, 0x01	; 1
  b0:	80 81       	ld	r24, Z
  b2:	88 23       	and	r24, r24
  b4:	c1 f7       	brne	.-16     	; 0xa6 <UART_Send_String+0x4>
  b6:	08 95       	ret

000000b8 <UART_Recieve_Byte>:
  b8:	5f 9b       	sbis	0x0b, 7	; 11
  ba:	fe cf       	rjmp	.-4      	; 0xb8 <UART_Recieve_Byte>
  bc:	8c b1       	in	r24, 0x0c	; 12
  be:	08 95       	ret

000000c0 <UART_Recieve_String>:
  c0:	fc 01       	movw	r30, r24
  c2:	5f 9b       	sbis	0x0b, 7	; 11
  c4:	fe cf       	rjmp	.-4      	; 0xc2 <UART_Recieve_String+0x2>
  c6:	8c b1       	in	r24, 0x0c	; 12
  c8:	81 93       	st	Z+, r24
  ca:	88 23       	and	r24, r24
  cc:	d1 f7       	brne	.-12     	; 0xc2 <UART_Recieve_String+0x2>
  ce:	08 95       	ret

000000d0 <main>:
  d0:	cf 93       	push	r28
  d2:	df 93       	push	r29
  d4:	60 e8       	ldi	r22, 0x80	; 128
  d6:	75 e2       	ldi	r23, 0x25	; 37
  d8:	80 e0       	ldi	r24, 0x00	; 0
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	0e 94 36 00 	call	0x6c	; 0x6c <UART_Init>
  e0:	c8 ec       	ldi	r28, 0xC8	; 200
  e2:	d0 e0       	ldi	r29, 0x00	; 0
  e4:	89 e7       	ldi	r24, 0x79	; 121
  e6:	0e 94 4c 00 	call	0x98	; 0x98 <UART_Send_Byte>
  ea:	80 e1       	ldi	r24, 0x10	; 16
  ec:	97 e2       	ldi	r25, 0x27	; 39
  ee:	fe 01       	movw	r30, r28
  f0:	31 97       	sbiw	r30, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <main+0x20>
  f4:	01 97       	sbiw	r24, 0x01	; 1
  f6:	d9 f7       	brne	.-10     	; 0xee <main+0x1e>
  f8:	8e e6       	ldi	r24, 0x6E	; 110
  fa:	0e 94 4c 00 	call	0x98	; 0x98 <UART_Send_Byte>
  fe:	80 e1       	ldi	r24, 0x10	; 16
 100:	97 e2       	ldi	r25, 0x27	; 39
 102:	fe 01       	movw	r30, r28
 104:	31 97       	sbiw	r30, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <main+0x34>
 108:	01 97       	sbiw	r24, 0x01	; 1
 10a:	d9 f7       	brne	.-10     	; 0x102 <main+0x32>
 10c:	eb cf       	rjmp	.-42     	; 0xe4 <main+0x14>

0000010e <__udivmodsi4>:
 10e:	a1 e2       	ldi	r26, 0x21	; 33
 110:	1a 2e       	mov	r1, r26
 112:	aa 1b       	sub	r26, r26
 114:	bb 1b       	sub	r27, r27
 116:	fd 01       	movw	r30, r26
 118:	0d c0       	rjmp	.+26     	; 0x134 <__udivmodsi4_ep>

0000011a <__udivmodsi4_loop>:
 11a:	aa 1f       	adc	r26, r26
 11c:	bb 1f       	adc	r27, r27
 11e:	ee 1f       	adc	r30, r30
 120:	ff 1f       	adc	r31, r31
 122:	a2 17       	cp	r26, r18
 124:	b3 07       	cpc	r27, r19
 126:	e4 07       	cpc	r30, r20
 128:	f5 07       	cpc	r31, r21
 12a:	20 f0       	brcs	.+8      	; 0x134 <__udivmodsi4_ep>
 12c:	a2 1b       	sub	r26, r18
 12e:	b3 0b       	sbc	r27, r19
 130:	e4 0b       	sbc	r30, r20
 132:	f5 0b       	sbc	r31, r21

00000134 <__udivmodsi4_ep>:
 134:	66 1f       	adc	r22, r22
 136:	77 1f       	adc	r23, r23
 138:	88 1f       	adc	r24, r24
 13a:	99 1f       	adc	r25, r25
 13c:	1a 94       	dec	r1
 13e:	69 f7       	brne	.-38     	; 0x11a <__udivmodsi4_loop>
 140:	60 95       	com	r22
 142:	70 95       	com	r23
 144:	80 95       	com	r24
 146:	90 95       	com	r25
 148:	9b 01       	movw	r18, r22
 14a:	ac 01       	movw	r20, r24
 14c:	bd 01       	movw	r22, r26
 14e:	cf 01       	movw	r24, r30
 150:	08 95       	ret

00000152 <_exit>:
 152:	f8 94       	cli

00000154 <__stop_program>:
 154:	ff cf       	rjmp	.-2      	; 0x154 <__stop_program>
